// <auto-generated />
using ApexSole_Sneakers.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApexSole_Sneakers.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240511094859_Init1")]
    partial class Init1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApexSole_Sneakers.Models.Apparel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("JacketId")
                        .HasColumnType("int");

                    b.Property<int>("JeansId")
                        .HasColumnType("int");

                    b.Property<int>("TshirtId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JacketId");

                    b.HasIndex("JeansId");

                    b.HasIndex("TshirtId");

                    b.ToTable("Apparel");
                });

            modelBuilder.Entity("ApexSole_Sneakers.Models.Jacket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("JacketBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JacketColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JacketName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JacketPrice")
                        .HasColumnType("int");

                    b.Property<int>("JacketSize")
                        .HasColumnType("int");

                    b.Property<int>("JacketType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Jackets");
                });

            modelBuilder.Entity("ApexSole_Sneakers.Models.Jeans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("JeansBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JeansColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JeansName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JeansPrice")
                        .HasColumnType("int");

                    b.Property<int>("JeansSize")
                        .HasColumnType("int");

                    b.Property<int>("JeansType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Jeans");
                });

            modelBuilder.Entity("ApexSole_Sneakers.Models.Sneakers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("SneakersBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SneakersColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SneakersName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SneakersPrice")
                        .HasColumnType("int");

                    b.Property<int>("SneakersSize")
                        .HasColumnType("int");

                    b.Property<int>("SneakersType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sneakers");
                });

            modelBuilder.Entity("ApexSole_Sneakers.Models.Tshirt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("SneakersBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SneakersColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SneakersName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SneakersPrice")
                        .HasColumnType("int");

                    b.Property<int>("SneakersSize")
                        .HasColumnType("int");

                    b.Property<int>("SneakersType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tshirts");
                });

            modelBuilder.Entity("ApexSole_Sneakers.Models.Apparel", b =>
                {
                    b.HasOne("ApexSole_Sneakers.Models.Jacket", "Jacket")
                        .WithMany()
                        .HasForeignKey("JacketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApexSole_Sneakers.Models.Jeans", "Jeans")
                        .WithMany()
                        .HasForeignKey("JeansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApexSole_Sneakers.Models.Tshirt", "Tshirt")
                        .WithMany()
                        .HasForeignKey("TshirtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jacket");

                    b.Navigation("Jeans");

                    b.Navigation("Tshirt");
                });
#pragma warning restore 612, 618
        }
    }
}
